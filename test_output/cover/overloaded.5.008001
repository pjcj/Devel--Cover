Reading database from ...


------------------------------------------ ------ ------ ------ ------ ------
File                                         stmt   bran   cond    sub  total
------------------------------------------ ------ ------ ------ ------ ------
tests/overloaded                            100.0   50.0    n/a  100.0   93.7
Total                                       100.0   50.0    n/a  100.0   93.7
------------------------------------------ ------ ------ ------ ------ ------


Run: ...
Perl version: ...
OS: ...
Start: ...
Finish: ...

tests/overloaded

line  err   stmt   bran   cond    sub   code
1                                       #!/usr/bin/perl
2                                       
3                                       # Copyright 2003-2016, Paul Johnson (paul@pjcj.net)
4                                       
5                                       # This software is free.  It is licensed under the same terms as Perl itself.
6                                       
7                                       # The latest version of this software should be available from my homepage:
8                                       # http://www.pjcj.net
9                                       
10                                      # Example stolen from overload documentation
11                                      
12                                      # __COVER__ changes s/^17 +3 +3/17 2 2/
13                                      # __COVER__ changes s/^(str +)3( tests/overloaded:17)/${1}2$2/
14                                      
15                                      package two_face;
16                                      
17             1                    1   sub new { my $p = shift; bless [@_], $p }
               1                        
18             1                    1   use overload '""' => \&str, '0+' => \&num, fallback => 1;
               1                        
               1                        
19             2                    2   sub num {shift->[1]}
20             2                    2   sub str {shift->[0]}
21                                      
22                                      package main;
23                                      
24             1                        my $seven = new two_face ("vii", 7);
25             1                        printf "seven=$seven, seven=%d, eight=%d\n", $seven, $seven+1;
26    ***      1     50                 print "seven contains `i'\n" if $seven =~ /i/;


Branches
--------

line  err      %   true  false   branch
----- --- ------ ------ ------   ------
26    ***     50      1      0   if $seven =~ /i/


Covered Subroutines
-------------------

Subroutine Count Location           
---------- ----- -------------------
BEGIN          1 tests/overloaded:18
new            1 tests/overloaded:17
num            2 tests/overloaded:19
str            2 tests/overloaded:20


